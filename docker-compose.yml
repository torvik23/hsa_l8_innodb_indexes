version: '3.8'

networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}
volumes:
  mysql:
    driver: ${VOLUMES_DRIVER}
services:
  mysql:
    build:
      context: ./docker/mysql
    container_name: mysql
    restart: always
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./volume/data/mysql:/var/lib/mysql
      - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - backend
  php-fpm:
    build:
      context: ./docker/php-fpm
    container_name: php-fpm
    depends_on:
      - mysql
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_PORT=${MYSQL_PORT}
      - APP_ENV=${APP_ENV}
    expose:
      - "9000"
    volumes:
      - ./application:/var/www/html
    networks:
      - backend
  nginx:
    build:
      context: ./docker/nginx
      args:
        - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
        - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
    container_name: nginx
    restart: always
    volumes:
      - ./application:/var/www/html
      - ./docker/nginx/sites-available:/etc/nginx/sites-available
      - ./volume/logs:/var/log
    depends_on:
      - php-fpm
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
    networks:
      - backend
      - frontend